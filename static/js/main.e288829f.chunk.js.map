{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","this","setInterval","setState","console","log","prevProps","props","name","clearInterval","React","Component","App","isClockVisible","clockName","Math","floor","random","renameClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"yLAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CACZN,MAAM,IAAIC,MAAOC,uBAInBK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAfP,gCAkBE,SAAmBS,GACbA,IAAcL,KAAKM,OAErBH,QAAQC,IAAR,qCAA0CC,EAAUE,KAApD,eAA+DP,KAAKM,MAAMC,SArBhF,kCAyBE,WACMP,KAAKD,SACPS,cAAcR,KAAKD,WA3BzB,oBA+BE,WACE,IAAQH,EAASI,KAAKL,MAAdC,KAER,OACE,qCACE,8CAEG,IACAA,KAGH,sCAEG,IACAI,KAAKM,MAAMC,eA7CtB,GAA2BE,IAAMC,WCF3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAG7BC,YAAc,WACZ,EAAKf,SAAS,CACZW,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WAAU,IAAD,OACP,EAAsChB,KAAKL,MAAnCkB,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,eAEnB,OACE,sBAAKM,UAAU,MAAf,UACE,6CAIA,sBAAKA,UAAU,QAAf,UACGN,GAAkB,cAAC,EAAD,CAAOL,KAAMM,IAEhC,gCACE,wBACEM,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SAAS,CAC3BU,gBAAgB,KAHpB,wBASA,wBACEO,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SAAS,CAC3BU,gBAAgB,KAHpB,wBASA,wBACEO,KAAK,SACLC,QAASpB,KAAKiB,YAFhB,0C,GA3CMR,IAAMC,WAwDTC,IC7DfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e288829f.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  time: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({\n        time: new Date().toLocaleTimeString(),\n      });\n\n      // eslint-disable-next-line\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <>\n        <p>\n          Current time:\n          {' '}\n          {time}\n        </p>\n\n        <p>\n          Name:\n          {' '}\n          {this.props.name}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 100),\n  };\n\n  renameClock = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 100),\n    });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          React clock\n        </h1>\n\n        <div className=\"clock\">\n          {isClockVisible && <Clock name={clockName} />}\n\n          <div>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({\n                isClockVisible: true,\n              })}\n            >\n              Show Clock\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => this.setState({\n                isClockVisible: false,\n              })}\n            >\n              Hide Clock\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.renameClock}\n            >\n              Set random name\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}